// src/features/certificate/hooks/useQualificationProgress.ts
import { useCeuSummary } from '@/features/ceu/hooks/useCeuSummary';
import { useSupervisionSummary } from '@/features/supervision/hooks/useSupervisionSummary';
import { useGetDocReviewReq } from '@/features/documentReview/hooks/useGetDocReviewReq';
import { useUserPayments } from '@/features/payment/hooks/useUserPayments';
import type { CeuSummaryResponse } from '@/features/ceu/api/getCeuSummary';
import type { SupervisionSummaryResponse } from '@/features/supervision/api/getSupervisionSummary';

const GROUP_PROGRESS_PATH: Record<string, string | null> = {
  –°—Ç—É–¥–µ–Ω—Ç: '–ò–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä',
  –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä: '–ö—É—Ä–∞—Ç–æ—Ä',
  –∫—É—Ä–∞—Ç–æ—Ä: '–°—É–ø–µ—Ä–≤–∏–∑–æ—Ä',
  —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä: null,
  '–æ–ø—ã—Ç–Ω—ã–π —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä': null,
};

type QualificationMode = 'EXAM' | 'RENEWAL';

type QualificationProgress = {
  mode: QualificationMode;
  targetGroup: string | null;
  isEligible: boolean;
  ceuReady: boolean;
  supervisionReady: boolean;
  documentsReady: boolean;
  loading: boolean;
  reasons: string[];
};

export function useQualificationProgress(
  activeGroupName: string | undefined
): QualificationProgress & { examPaid: boolean } {
  const { data: ceuSummary, isLoading: ceuLoading } = useCeuSummary() as {
    data: CeuSummaryResponse;
    isLoading: boolean;
  };

  const { data: supervisionSummary, isLoading: supervisionLoading } =
    useSupervisionSummary() as {
      data: SupervisionSummaryResponse;
      isLoading: boolean;
    };

  const { data: docReview, isLoading: docLoading } = useGetDocReviewReq();
  const { data: payments, isLoading: paymentsLoading } = useUserPayments();

  // üîß –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º –∏–º—è –≥—Ä—É–ø–ø—ã
  const g = (activeGroupName ?? '').toLowerCase().trim();

  const mode: QualificationMode =
    g === '—Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä' || g === '–æ–ø—ã—Ç–Ω—ã–π —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä' ? 'RENEWAL' : 'EXAM';

  const targetGroup =
    mode === 'EXAM' && g ? GROUP_PROGRESS_PATH[g] ?? null : null;

  // CEU: –∫–∞–∫ –∏ –±—ã–ª–æ (–¥–ª—è —Ü–µ–ª–∏ "–°—É–ø–µ—Ä–≤–∏–∑–æ—Ä" —Ç—Ä–µ–±—É–µ–º CEU.supervision)
  const ceuReady =
    !!ceuSummary?.percent &&
    ceuSummary.percent.ethics >= 100 &&
    ceuSummary.percent.cultDiver >= 100 &&
    (targetGroup === '–°—É–ø–µ—Ä–≤–∏–∑–æ—Ä' ? ceuSummary.percent.supervision >= 100 : true) &&
    ceuSummary.percent.general >= 100;

  // üß† Supervision: –¥–ª—è –Ω–µ-—Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä–æ–≤ ‚Äî –ø–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º instr+curator;
  // –¥–ª—è —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä–æ–≤ ‚Äî –ø–æ —Å—É–º–º–µ –º–µ–Ω—Ç–æ—Ä—Å–∫–∏—Ö —á–∞—Å–æ–≤ (instr+curator+supervisor) >= 2000
  let supervisionReady = false;
  if (mode === 'EXAM') {
    supervisionReady =
      !!supervisionSummary?.percent &&
      supervisionSummary.percent.instructor >= 100 &&
      supervisionSummary.percent.curator >= 100;
  } else {
    const usableInstr = supervisionSummary?.usable?.instructor ?? 0;
    const usableCur = supervisionSummary?.usable?.curator ?? 0;
    const usableSup = supervisionSummary?.usable?.supervisor ?? 0;
    const totalUsable = usableInstr + usableCur + usableSup;
    const REQUIRED_TOTAL = 2000;
    supervisionReady = totalUsable >= REQUIRED_TOTAL;
  }

  // –î–æ–∫—É–º–µ–Ω—Ç—ã + –æ–ø–ª–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
  const documentPayment = payments?.find((p) => p.type === 'DOCUMENT_REVIEW');
  const documentsReady =
    docReview?.status === 'CONFIRMED' && documentPayment?.status === 'PAID';

  // –≠–∫–∑–∞–º–µ–Ω—å—Å–∫–∞—è –æ–ø–ª–∞—Ç–∞ (–Ω—É–∂–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ EXAM)
  const examPaid = (payments ?? []).some((p) => p.type === 'EXAM_ACCESS' && p.status === 'PAID');

  // –ü—Ä–∏—á–∏–Ω—ã –≤—ã–≤–æ–¥–∏–º —Ç–æ–ª—å–∫–æ –≤ EXAM-—Ä–µ–∂–∏–º–µ (UI —É–∂–µ –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–¥–ø–∏—Å–∏ –¥–ª—è —Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä–æ–≤)
  const reasons: string[] = [];
  if (mode === 'EXAM') {
    if (!ceuReady) reasons.push('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ CEU-–±–∞–ª–ª–æ–≤');
    if (!supervisionReady) reasons.push('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —á–∞—Å–æ–≤ —Å—É–ø–µ—Ä–≤–∏–∑–∏–∏');
    if (!documentsReady) reasons.push('–î–æ–∫—É–º–µ–Ω—Ç—ã –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω—ã –∏–ª–∏ –Ω–µ –æ–ø–ª–∞—á–µ–Ω—ã');
  }

  // ‚úÖ –î–æ–ø—É—Å–∫
  const isEligible =
    mode === 'RENEWAL'
      ? ceuReady && documentsReady // –±–µ–∑ —ç–∫–∑–∞–º–µ–Ω–∞; —á–∞—Å—ã –º–µ–Ω—Ç–æ—Ä—Å—Ç–≤–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º, –Ω–æ –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ–º (–ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–æ–º–µ–Ω—è–µ–º)
      : ceuReady && supervisionReady && documentsReady;

  return {
    mode,
    targetGroup,
    isEligible,
    ceuReady,
    supervisionReady,
    documentsReady,
    loading: ceuLoading || supervisionLoading || docLoading || paymentsLoading,
    reasons,
    examPaid,
  };
}
